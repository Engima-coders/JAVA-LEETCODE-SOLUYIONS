/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if (head==null){return head;}
        if (head.next==null){
            head=null;
            return head;}
        ListNode midd=findmiddle(head);
        ListNode temp=new ListNode(0);
        temp.next=head;
        while(temp!=null){
            if (temp.next==midd){
                 temp.next=temp.next.next;
                 break;
            }
            temp=temp.next;
        }
        return head;
    }
    public ListNode findmiddle(ListNode head){
        ListNode slow=head,fast=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }return slow;
    }
}
